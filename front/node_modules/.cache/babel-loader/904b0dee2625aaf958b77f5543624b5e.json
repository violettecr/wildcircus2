{"ast":null,"code":"import _objectSpread from \"/home/violette/Bureau/projet3/nantes-0919-js-CGouestre-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"/home/violette/Bureau/projet3/nantes-0919-js-CGouestre-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/violette/Bureau/projet3/nantes-0919-js-CGouestre-front/src/Components/Contact.jsx\";\n\n/* eslint-disable no-unused-vars */\nimport React, { useState } from 'react';\nimport './css/Contact.css';\nimport axios from 'axios';\nimport Recaptcha from 'react-google-recaptcha';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport { apiEndPoint } from '../config';\nimport Navbar from './Navbar/Navbar';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    '& > *': {\n      margin: theme.spacing(1),\n      width: '100%'\n    }\n  }\n}));\n\nconst Contact = () => {\n  const classes = useStyles();\n\n  const _useState = useState({\n    name: '',\n    subject: '',\n    email: '',\n    text: ''\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        form = _useState2[0],\n        setForm = _useState2[1];\n\n  const _useState3 = useState(false),\n        _useState4 = _slicedToArray(_useState3, 2),\n        isVerified = _useState4[0],\n        setIsVerified = _useState4[1];\n\n  const onChanger = () => {\n    setIsVerified(true);\n  };\n\n  const submitForm = () => {\n    axios.post(`${apiEndPoint}/contact/`, {\n      name: form.name,\n      subject: form.subject,\n      email: form.email,\n      text: form.text\n    }).then(result => {\n      console.log(result);\n    });\n  };\n\n  return React.createElement(React.Fragment, null, React.createElement(Navbar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    id: \"contactBody\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    id: \"contact\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, React.createElement(\"strong\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, \"Contactez-nous\")), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, React.createElement(\"strong\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, \"Vous souhaitez nous poser une question ? Ou tout simplement \\xEAtre mis en relation avec nos \\xE9quipes ?\", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }), \"Veuillez compl\\xE9ter le formulaire ci-dessous et nous vous recontacterons au plus vite.\")), React.createElement(\"form\", {\n    className: classes.root,\n    noValidate: true,\n    autoComplete: \"off\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    id: \"standard-basic\",\n    label: \"nom\",\n    variant: \"standard\",\n    value: form.name,\n    onChange: event => setForm(_objectSpread({}, form, {\n      name: event.target.value\n    })),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }), React.createElement(TextField, {\n    id: \"standard-basic\",\n    label: \"objet\",\n    variant: \"standard\",\n    value: form.subject,\n    onChange: event => setForm(_objectSpread({}, form, {\n      subject: event.target.value\n    })),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }), React.createElement(TextField, {\n    id: \"standard-basic\",\n    label: \"email\",\n    required: \"required\",\n    variant: \"standard\",\n    value: form.email,\n    onChange: event => setForm(_objectSpread({}, form, {\n      email: event.target.value\n    })),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }), React.createElement(TextField, {\n    id: \"standard-multiline-static\",\n    label: \"message\",\n    required: \"required\",\n    multiline: true,\n    rows: \"7\",\n    variant: \"standard\",\n    value: form.text,\n    onChange: event => setForm(_objectSpread({}, form, {\n      text: event.target.value\n    })),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    id: \"captcha\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, React.createElement(Recaptcha, {\n    sitekey: \"6LenRsYUAAAAAOj8qWl5Rp66bucQCNtOKczLvviT\",\n    render: \"explicit\",\n    onChange: onChanger,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  })), React.createElement(\"button\", {\n    id: \"button\",\n    type: \"submit\",\n    className: \"btn btn-primary\",\n    onClick: submitForm,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }, \"Envoyer \"))));\n};\n\nexport default Contact;","map":{"version":3,"sources":["/home/violette/Bureau/projet3/nantes-0919-js-CGouestre-front/src/Components/Contact.jsx"],"names":["React","useState","axios","Recaptcha","makeStyles","TextField","apiEndPoint","Navbar","useStyles","theme","root","margin","spacing","width","Contact","classes","name","subject","email","text","form","setForm","isVerified","setIsVerified","onChanger","submitForm","post","then","result","console","log","event","target","value"],"mappings":"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","sourcesContent":["/* eslint-disable no-unused-vars */\nimport React, { useState } from 'react';\nimport './css/Contact.css';\nimport axios from 'axios';\nimport Recaptcha from 'react-google-recaptcha';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport { apiEndPoint } from '../config';\n\nimport Navbar from './Navbar/Navbar';\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    '& > *': {\n      margin: theme.spacing(1),\n      width: '100%',\n    },\n  },\n}));\n\nconst Contact = () => {\n  const classes = useStyles();\n\n  const [form, setForm] = useState({\n    name: '',\n    subject: '',\n    email: '',\n    text: '',\n  });\n\n  const [isVerified, setIsVerified] = useState(false);\n\n  const onChanger = () => {\n    setIsVerified(true);\n  };\n\n  const submitForm = () => {\n    axios.post(`${apiEndPoint}/contact/`, {\n      name: form.name,\n      subject: form.subject,\n      email: form.email,\n      text: form.text,\n    }).then((result) => {\n      console.log(result);\n    });\n  };\n\n  return (\n    <>\n      <Navbar />\n      <div id=\"contactBody\">\n\n        <div id=\"contact\">\n          <h1><strong>Contactez-nous</strong></h1>\n          <p>\n            <strong>\n          Vous souhaitez nous poser une question ?\n          Ou tout simplement être mis en relation avec nos équipes ?\n              <br />\n          Veuillez compléter le formulaire ci-dessous et nous vous\n          recontacterons au plus vite.\n            </strong>\n          </p>\n          <form className={classes.root} noValidate autoComplete=\"off\">\n            <TextField\n              id=\"standard-basic\"\n              label=\"nom\"\n              variant=\"standard\"\n              value={form.name}\n              onChange={(event) => setForm({ ...form, name: event.target.value })}\n            />\n            <TextField\n              id=\"standard-basic\"\n              label=\"objet\"\n              variant=\"standard\"\n              value={form.subject}\n              onChange={(event) => setForm({ ...form, subject: event.target.value })}\n            />\n            <TextField\n              id=\"standard-basic\"\n              label=\"email\"\n              required=\"required\"\n              variant=\"standard\"\n              value={form.email}\n              onChange={(event) => setForm({ ...form, email: event.target.value })}\n            />\n            <TextField\n              id=\"standard-multiline-static\"\n              label=\"message\"\n              required=\"required\"\n              multiline\n              rows=\"7\"\n              variant=\"standard\"\n              value={form.text}\n              onChange={(event) => setForm({ ...form, text: event.target.value })}\n            />\n          </form>\n          <div id=\"captcha\">\n            <Recaptcha\n              sitekey=\"6LenRsYUAAAAAOj8qWl5Rp66bucQCNtOKczLvviT\"\n              render=\"explicit\"\n              onChange={onChanger}\n            />\n          </div>\n\n          <button id=\"button\" type=\"submit\" className=\"btn btn-primary\" onClick={submitForm}>Envoyer </button>\n        </div>\n\n      </div>\n    </>\n  );\n};\n\nexport default Contact;\n"]},"metadata":{},"sourceType":"module"}
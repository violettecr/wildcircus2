{"ast":null,"code":"import _slicedToArray from \"/home/violette/Bureau/projet3/FRONT_COPIE_nantes-0919-js-CGouestre-front (copie)/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/violette/Bureau/projet3/FRONT_COPIE_nantes-0919-js-CGouestre-front (copie)/src/Components/Adverts/AdvertsList.jsx\";\nimport React, { useState, useEffect, Fragment, useContext } from 'react';\nimport { CtxAdverts } from '../CtxAdverts';\nimport PrevAdvert from './PrevAdvert';\nimport GridListTile from '@material-ui/core/GridListTile';\nimport GridList from '@material-ui/core/GridList';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport '../css/AdvertsList.css';\n\nconst AdvertsList = props => {\n  const _useContext = useContext(CtxAdverts),\n        _useContext2 = _slicedToArray(_useContext, 1),\n        adverts = _useContext2[0];\n\n  const matches = useMediaQuery('(min-width:750px)');\n\n  const verif = () => {\n    if (matches === true) {\n      return 2;\n    } else {\n      return 1;\n    }\n  };\n\n  const list = () => {\n    return props.handleFilters(adverts).map((advert, index) => {\n      return React.createElement(GridListTile, {\n        key: index,\n        cols: 1,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }, React.createElement(PrevAdvert, {\n        key: index,\n        title: advert.title,\n        describ: advert.description,\n        id: advert.id,\n        types: advert.types,\n        location: advert.location,\n        price: advert.price,\n        name: advert.name,\n        image: advert.url_image,\n        email: advert.email,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }));\n    });\n  };\n\n  console.log(list().length);\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, React.createElement(GridList, {\n    cellHeight: 160,\n    cols: verif(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, list().length <= 0 ? React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, \"Aucune annonce ne correspond \\xE0 votre recherche\") : list()));\n};\n\nexport default AdvertsList;","map":{"version":3,"sources":["/home/violette/Bureau/projet3/FRONT_COPIE_nantes-0919-js-CGouestre-front (copie)/src/Components/Adverts/AdvertsList.jsx"],"names":["React","useState","useEffect","Fragment","useContext","CtxAdverts","PrevAdvert","GridListTile","GridList","useMediaQuery","AdvertsList","props","adverts","matches","verif","list","handleFilters","map","advert","index","title","description","id","types","location","price","name","url_image","email","console","log","length"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,QAArC,EAA+CC,UAA/C,QAAiE,OAAjE;AACA,SAASC,UAAT,QAA2B,eAA3B;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,YAAP,MAAyB,gCAAzB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,aAAP,MAA0B,iCAA1B;AACA,OAAO,wBAAP;;AAEA,MAAMC,WAAW,GAAIC,KAAD,IAAW;AAAA,sBACXP,UAAU,CAACC,UAAD,CADC;AAAA;AAAA,QACtBO,OADsB;;AAE7B,QAAMC,OAAO,GAAGJ,aAAa,CAAC,mBAAD,CAA7B;;AAGA,QAAMK,KAAK,GAAG,MAAM;AAClB,QAAGD,OAAO,KAAK,IAAf,EAAqB;AACnB,aAAO,CAAP;AACD,KAFD,MAEO;AACL,aAAO,CAAP;AACD;AACF,GAND;;AAQE,QAAME,IAAI,GAAG,MAAK;AAChB,WACEJ,KAAK,CAACK,aAAN,CAAoBJ,OAApB,EAA6BK,GAA7B,CAAiC,CAACC,MAAD,EAASC,KAAT,KAAmB;AAClD,aAAO,oBAAC,YAAD;AAAc,QAAA,GAAG,EAAEA,KAAnB;AAA0B,QAAA,IAAI,EAAE,CAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACD,oBAAC,UAAD;AACE,QAAA,GAAG,EAAEA,KADP;AAEE,QAAA,KAAK,EAAED,MAAM,CAACE,KAFhB;AAGE,QAAA,OAAO,EAAEF,MAAM,CAACG,WAHlB;AAIE,QAAA,EAAE,EAAEH,MAAM,CAACI,EAJb;AAKE,QAAA,KAAK,EAAEJ,MAAM,CAACK,KALhB;AAME,QAAA,QAAQ,EAAEL,MAAM,CAACM,QANnB;AAOE,QAAA,KAAK,EAAEN,MAAM,CAACO,KAPhB;AAQE,QAAA,IAAI,EAAEP,MAAM,CAACQ,IARf;AASE,QAAA,KAAK,EAAER,MAAM,CAACS,SAThB;AAUE,QAAA,KAAK,EAAET,MAAM,CAACU,KAVhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADC,CAAP;AAaD,KAdD,CADF;AAiBD,GAlBD;;AAmBJC,EAAAA,OAAO,CAACC,GAAR,CAAYf,IAAI,GAAGgB,MAAnB;AACC,SACG,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,QAAD;AAAU,IAAA,UAAU,EAAE,GAAtB;AAA2B,IAAA,IAAI,EAAEjB,KAAK,EAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGC,IAAI,GAAGgB,MAAP,IAAe,CAAf,GAAmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yDAAnB,GAA2EhB,IAAI,EADlF,CADF,CADH;AAQA,CAzCD;;AA2CA,eAAeL,WAAf","sourcesContent":["import React, { useState, useEffect, Fragment, useContext } from 'react';\nimport { CtxAdverts } from '../CtxAdverts';\nimport PrevAdvert from './PrevAdvert';\nimport GridListTile from '@material-ui/core/GridListTile';\nimport GridList from '@material-ui/core/GridList';\nimport useMediaQuery from '@material-ui/core/useMediaQuery'\nimport '../css/AdvertsList.css';\n\nconst AdvertsList = (props) => {\n  const [adverts] = useContext(CtxAdverts);\n  const matches = useMediaQuery('(min-width:750px)')\n  \n\n  const verif = () => {\n    if(matches === true ){\n      return 2\n    } else {\n      return 1\n    }\n  }\n\n    const list = () =>{\n      return (\n        props.handleFilters(adverts).map((advert, index) => {\n          return <GridListTile key={index} cols={1} >\n                <PrevAdvert \n                  key={index} \n                  title={advert.title} \n                  describ={advert.description}\n                  id={advert.id}\n                  types={advert.types}\n                  location={advert.location}\n                  price={advert.price}\n                  name={advert.name}\n                  image={advert.url_image}\n                  email={advert.email}  />\n              </GridListTile>\n        })\n      )\n    }\nconsole.log(list().length)\n\treturn (\n    <Fragment>\n      <GridList cellHeight={160} cols={verif()}>\n        {list().length<=0 ? <p>Aucune annonce ne correspond Ã  votre recherche</p> : list()}\n      </GridList>  \n    </Fragment>\n\n  );\n}\n\nexport default AdvertsList;"]},"metadata":{},"sourceType":"module"}